import type { AppProps } from "next/app";
import { useEffect, useState } from "react";
import Head from "next/head";
import { evmosTestnet } from "wagmi/chains";
import { publicProvider } from "wagmi/providers/public";
import { configureChains, createClient, WagmiConfig } from "wagmi";
import {
  darkTheme,
  getDefaultWallets,
  RainbowKitProvider,
} from "@rainbow-me/rainbowkit";
import { ChakraProvider, extendTheme } from "@chakra-ui/react";
import "@rainbow-me/rainbowkit/styles.css";
import "@styles/globals.css";
import Navbar from "@components/Navbar";

const { chains, provider } = configureChains(
  [evmosTestnet],
  [publicProvider()]
);

const { connectors } = getDefaultWallets({
  appName: "Demo app",
  chains,
});

const wagmiConfig = createClient({
  autoConnect: true,
  connectors,
  provider,
});

const theme = extendTheme({
  styles: {
    global: {
      "*": {
        fontFamily: "Plus Jakarta Sans",
        color: "white",
      },
      a: {
        _hover: {
          textDecoration: "none !important",
        },
      },
    },
  },
});

const rainbowTheme = darkTheme({
  accentColor: "#7b3fe4",
  accentColorForeground: "white",
  borderRadius: "small",
  fontStack: "system",
  overlayBlur: "small",
});

export default function App({ Component, pageProps, router }: AppProps) {
  const [mounted, setMounted] = useState(false);

  useEffect(() => setMounted(true), []);
  if (!mounted) return null;

  return (
    <>
      <WagmiConfig client={wagmiConfig}>
        <RainbowKitProvider chains={chains} theme={rainbowTheme}>
          <ChakraProvider theme={theme}>
            <Head>
              <title>Demo app</title>
              <meta name="description" content="Generated by create next app" />
              <link rel="icon" href="/favicon.ico" />
            </Head>
            <Navbar />
            <Component {...pageProps} key={router.route} />
          </ChakraProvider>
        </RainbowKitProvider>
      </WagmiConfig>
    </>
  );
}
